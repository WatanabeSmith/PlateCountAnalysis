remove.packages("evaluate", lib="~R/win-library/3.2")
remove.packages("evaluate")
install.packages("evaluate")
library("evaluate")
install.packages("stringi")
library("stringi")
library("evaluate")
library("updateR")
install.packages("updateR")
library("updateR")
---
This is an attempt at analyzing the limiting dilution plating experiments in my
ongoing Acquired Mutations project. No analysis has been performed to this point.
```{r}
library(dplyr)
library(ggplot2)
RawData <- read.csv("PlateSortResults.csv")
summary(RawData)
head(RawData)
```
We should start by getting an idea for Plating Efficiency (PE) from the WEHI wells
```{r}
WEHIonly <- RawData %>% filter(Media == "WEHI")
summary(WEHIonly)
WEHIcomplete <- WEHIonly %>% filter(!is.na(WellsGrown))
summary(WEHIcomplete)
Wpercents <- WEHIcomplete %>% transform(GrowthPercent = WellsGrown / WellsPlated)
summary(Wpercents)
hist(Wpercents$GrowthPercent)
```
Which conditions gave the low end of the growth percent?
```{r}
Wlowgrowth <- Wpercents %>% filter(GrowthPercent < 0.4)
Wlowgrowth[1,c(1,5,6,9,10)]
```
Comparing PE of cells plated at 2 days and 9 days post-infection
```{r}
Wpercents2 <- Wpercents %>% filter(DaysPostInfection == 2)
Wpercents9 <- Wpercents %>% filter(DaysPostInfection == 9)
summary(Wpercents2)
summary(Wpercents9)
hist(Wpercents2$GrowthPercent, xlim = c(0.2,1), xlab = "Percent Growth 2 days post-infection", breaks = 8, main = "WEHI 2 days post infection")
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent), add = TRUE, col = "darkblue", lwd = 2))
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2))
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2)
```{r}
hist((RawData %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown))))
```{r}
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / Wells Plated)
```{r}
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent)
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 1 cell per well")
```
?scatter()
?plot()
plot(Wpercents2$GrowthPercent, Wpercents9$GrowthPercent)
hinge(Wpercents2, Wpercents9)
merge(Wpercents2, Wpercents9)
rbind(Wpercents2, Wpercents9)
cbind(Wpercents2, Wpercents9)
meltRaw <- melt(RawData, id=c("Transgene", "Mutation", "LineNum_legacy"))
install.packages(reshape)
"reshape2"
install.packages("reshape2")
library(reshape2)
meltRaw <- melt(RawData, id=c("Transgene", "Mutation", "LineNum_legacy"))
View(meltRaw)
View(meltRaw)
castRaw <- cast(meltRaw, LineNum_legacy~variable, mean)
castRaw <- dcast(meltRaw, LineNum_legacy~variable, mean)
View(castRaw)
meltRaw <- melt(RawData, id=c("LineID"))
View(meltRaw)
3. We need to adjust GrowthPercent for Plating Effiency
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(CompleteData, -WellsPlated, -WellsCensored)
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(-WellsPlated, -WellsCensored)
head(CompleteData)
CompletePercent <- CompleteData %>% mutate(GrowthPercent = WellsGrown / TrueWellsPlated) %>% select(-WellsGrown, -TrueWellsPlated, -LineNum_legacy, -Transgene, -Mutation)
head(CompletePercent)
```
View(meltRaw)
View(CompletePercent)
meltComplete <- melt(CompletePercent, id.vars = "LineID")
View(meltComplete)
lapply()
FUN()
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(-WellsPlated, -WellsCensored)
head(CompleteData)
CompletePercent <- CompleteData %>% mutate(GrowthPercent = WellsGrown / TrueWellsPlated) %>% select(-WellsGrown, -TrueWellsPlated, -LineNum_legacy, -Transgene, -Mutation)
head(CompletePercent)
```
Trying to reshape data to allow for better analysis
```{r}
CompleteConcat <- CompletePercent %>% mutate(Day_Media_Cells = paste(DaysPostInfection, Media, CellsPerWell, sep = "_")) %>% select(-PlateSeries, -DaysPostInfection, -CellsPerWell, -Media)
head(CompleteConcat)
CompleteTidy <- recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
View(CompleteConcat)
View(CompleteConcat)
str(Completetid )
str(CompleteConcat)
Fact <- CompleteConcat %>% mutate(Day_Media_Cells = as.factor(Day_Media_Cells))
str(Fact)
```{r}
CompleteConcat <- CompletePercent %>% mutate(Day_Media_Cells = paste(DaysPostInfection, Media, CellsPerWell, sep = "_")) %>% select(-PlateSeries, -DaysPostInfection, -CellsPerWell, -Media)
CompleteConcat <- CompleteConcat %>% mutate(Day_Media_Cells = as.factor(Day_Media_Cells))
head(CompleteConcat)
CompleteTidy <- recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
head(CompleteTidy)
2. We need to calculate GrowthPercent for all observations
str(CompleteConcat)
is.na(CompleteConcat)
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID",
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = 1,3)
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = 1,3)
recast(CompleteConcat, LineID ~ 3, id.var = 1,3)
```{r}
library(dplyr)
library(ggplot2)
library(reshape2)
library(stringr)
RawData <- read.csv("PlateSortResults.csv")
summary(RawData)
```
We should start by getting an idea for Plating Efficiency (PE) from the WEHI wells
```{r, cache = TRUE}
WEHIonly <- RawData %>% filter(Media == "WEHI")
summary(WEHIonly)
WEHIcomplete <- WEHIonly %>% filter(!is.na(WellsGrown))
Wpercents <- WEHIcomplete %>% transform(GrowthPercent = WellsGrown / WellsPlated)
hist(Wpercents$GrowthPercent)
```
Which conditions gave the low end of the growth percent?
```{r, cache = TRUE}
Wlowgrowth <- Wpercents %>% filter(GrowthPercent < 0.4)
Wlowgrowth[1,c(1,5,6,9,10)]
```
Comparing PE of cells plated at 2 days and 9 days post-infection
```{r, cache = TRUE}
Wpercents2 <- Wpercents %>% filter(DaysPostInfection == 2)
Wpercents9 <- Wpercents %>% filter(DaysPostInfection == 9)
summary(Wpercents2)
summary(Wpercents9)
hist(Wpercents2$GrowthPercent, xlim = c(0.2,1), xlab = "Percent Growth 2 days post-infection", breaks = 8, main = "WEHI 2 days post infection")
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2)
hist(Wpercents9$GrowthPercent, xlim = c(0.2,1), xlab = "Percent Growth 9 days post-infection", breaks = 8, main = "WEHI 9 days post infection")
curve(dnorm(x, mean = mean(Wpercents9$GrowthPercent), sd = sd(Wpercents9$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2)
```
### **Conclusion: days post-infection do not seem to impact plating efficiency**
Let's try the same approach with the R10 data
```{r, cache = TRUE}
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 1 cell per well")
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 1 cell per well")
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 100, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 100 cells per well")
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1000, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 1,000 cells per well")
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 10000, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 10,000 cells per well")
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(-WellsPlated, -WellsCensored)
head(CompleteData)
CompleteData <- CompleteData %>% mutate(LineID = str_sub(LineID, 2)) %>% mutate(LineID = paste(LineNum_legacy, LineID, sep = ""))
head(CompleteData)
CompletePercent <- CompleteData %>% mutate(GrowthPercent = WellsGrown / TrueWellsPlated) %>% select(-WellsGrown, -TrueWellsPlated, -LineNum_legacy, -Transgene, -Mutation)
head(CompletePercent)
CompletePercent <- CompletePercent %>% mutate(Media = str_sub(Media,1,1))
CompleteConcat <- CompletePercent %>% mutate(Media_Day_Cells = paste(Media, DaysPostInfection, CellsPerWell, sep = "_")) %>% select(-PlateSeries, -DaysPostInfection, -CellsPerWell, -Media)
#Change the identifier column into a factor (instead of character)
CompleteConcat <- CompleteConcat %>% mutate(Media_Day_Cells = as.factor(Media_Day_Cells))
head(CompleteConcat)
#Recast the data with LineID as the rows, Media_Day_Cells as the columns, and GrowthPercent as the values
CompleteTidy <- recast(CompleteConcat, LineID ~ Media_Day_Cells, id.var = c("LineID","Media_Day_Cells"), fun.aggregate = mean, na.rm = TRUE)
head(CompleteTidy)
plot(CompleteTidy$`W_2_1`, CompleteTidy$`W_9_1`, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
abline(a = 0, b = 1, col = "darkblue")
summary(CompleteTidy)
CompleteTidy <- CompleteTidy %>% mutate(R_2_1 = R_2_1 / W_2_1)
summary(CompleteTidy)
library(statmod)
install.packages("statmod")
CompleteData <- CompleteData %>% mutate(LineID = paste(LineID, DaysPostInfection, sep = "_"))
head(CompleteData)
WehiPE <- CompleteData %>% filter(Media == "WEHI")
head(WehiPE)
MassELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
library(statmod)
MassELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(MassELDA)
MassELDA
WehiELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
WehiELDA <- as.data.frame(WehiELDA$CI)
head(WehiELDA)
WehiELDAest <- add_rownames(WehiELDAest, var = "LineID")
WehiELDAest <- add_rownames(WehiELDA, var = "LineID")
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.factor(LineID))
WehiELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
WehiELDAest <- as.data.frame(WehiELDA$CI)
head(WehiELDA)
WehiELDAest <- add_rownames(WehiELDAest, var = "LineID")
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.factor(LineID))
write.csv(WehiELDAest, "WehiELDAConfIntervals.csv")
head(WehiELDAest)
WehiELDAest <- WehiELDAest[-11,]
head(WehiELDAest)
WehiELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
WehiELDAest <- as.data.frame(WehiELDA$CI)
head(WehiELDA)
WehiELDAest <- add_rownames(WehiELDAest, var = "LineID")
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.factor(LineID))
#write.csv(WehiELDAest, "WehiELDAConfIntervals.csv")
#Drop Observations 11 and 12, incomplete due to contam
WehiELDAest <- WehiELDAest[c(-3,-4),]
head(WehiELDAest)
WehiELDAest
WehiELDAest[,]
View(WehiELDAest)
seq(1,50,2)
seq(2,50,2)
head(WehiELDAest)
Odd <- seq(1,50,2)
Even <- seq(2,50,2)
plot(WehiELDAest[Odd,], WehiELDAest[Even,], xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
plot(WehiELDAest[Odd,], WehiELDAest[Even,], ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
plot(WehiELDAest[Odd,], WehiELDAest[Even,])
plot(WehiELDAest[Odd,3], WehiELDAest[Even,3], xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
plot(WehiELDAest[Odd,3], WehiELDAest[Even,3])
plot(WehiELDAest[Odd,$Estimate], WehiELDAest[Even,$Estimate])
WehiELDAest[Odd,$Estimate]
WehiELDAest[Odd,3]
WehiELDAest[Even,$Estimate]
WehiELDAest[Even,3]
plot(WehiELDAest[Odd,3], WehiELDAest[Even,3])
PE2d <- WehiELDAest[Odd,3]
PE9d <- WehiELDAest[Even,3]
plot(PE2d, PE9d)
plot(CompleteTidy$`W_2_1`, CompleteTidy$`W_9_1`, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
str(CompleteTidy)
plot(PE2d$Estimate, PE9d$Estimate)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection")
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 1:3.5, ylim = 1:3.5)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 1:4, ylim = 1:4)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 1:4, ylim = 1:4)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 1, ylim = 1:4)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 1:4)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:1, ylim = 0:1)
?xlim
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:2, ylim = 0:1)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = 0:5, ylim = 0:5)
?xlim
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection")
xlim(1,5)
ylim(1,5)
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection")
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(1:5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(1,5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(1,5), ylim = c(1,5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(1,3.5), ylim = c(1,5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(1,3.5), ylim = c(1,3.5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(0.8,3.5), ylim = c(1,3.5))
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(0.8,3.5), ylim = c(0.8,3.5))
abline(a = 0, b = 1, col = "darkblue")
head(WehiELDAest)
?substr
substr(WehiELDAest$LineID,1,nchar(WehiELDAest$LineID)-3)
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.character(LineID))
WehiELDAest$LineID <- substr(WehiELDAest$LineID,1,nchar(WehiELDAest$LineID)-3)
head(WehiELDAest)
WehiELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
WehiELDAest <- as.data.frame(WehiELDA$CI)
head(WehiELDA)
WehiELDAest <- add_rownames(WehiELDAest, var = "LineID")
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.factor(LineID))
#write.csv(WehiELDAest, "WehiELDAConfIntervals.csv")
#Drop Observations 11 and 12, incomplete due to contam
WehiELDAest <- WehiELDAest[c(-3,-4),]
head(WehiELDAest)
Odd <- seq(1,50,2)
Even <- seq(2,50,2)
PE2d <- WehiELDAest[Odd,3]
PE9d <- WehiELDAest[Even,3]
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(0.8,3.5), ylim = c(0.8,3.5))
abline(a = 0, b = 1, col = "darkblue")
#Need to clean up the LineID field
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.character(LineID))
WehiELDAest$LineID <- substr(WehiELDAest$LineID,6,nchar(WehiELDAest$LineID))
head(WehiELDAest)
PEonly <- WehiELDAest %>% select(LineID, Estimate)
head(PEonly)
R10only <- CompleteData %>% filter(Media == "R10")
R10PE <- merge(R10only, PEonly, by="LineID")
head(R10PE)
head(R10only)
str(R10only)
str(PEonly)
WehiELDA <- elda(response = WehiPE$WellsGrown, dose = WehiPE$CellsPerWell, tested = WehiPE$TrueWellsPlated, group = WehiPE$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
WehiELDAest <- as.data.frame(WehiELDA$CI)
head(WehiELDA)
WehiELDAest <- add_rownames(WehiELDAest, var = "LineID")
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.factor(LineID))
#write.csv(WehiELDAest, "WehiELDAConfIntervals.csv")
#Drop Observations 11 and 12, incomplete due to contam
WehiELDAest <- WehiELDAest[c(-3,-4),]
head(WehiELDAest)
Odd <- seq(1,50,2)
Even <- seq(2,50,2)
PE2d <- WehiELDAest[Odd,3]
PE9d <- WehiELDAest[Even,3]
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(0.8,3.5), ylim = c(0.8,3.5))
abline(a = 0, b = 1, col = "darkblue")
#Need to clean up the LineID field
WehiELDAest <- WehiELDAest %>% mutate(LineID = as.character(LineID))
WehiELDAest$LineID <- substr(WehiELDAest$LineID,7,nchar(WehiELDAest$LineID))
PEonly <- WehiELDAest %>% select(LineID, Estimate)
head(PEonly)
R10only <- CompleteData %>% filter(Media == "R10")
R10PE <- merge(R10only, PEonly, by="LineID")
head(R10PE)
TidyData <- R10PE %>% mutate(PE_adjusted_cells = CellsPerWell * Estimate)
head(TidyData)
write.csv(TidyData, file = "TidyData.csv")
TidyData <- R10PE %>% mutate(PE_adjusted_cells = CellsPerWell / Estimate)
TidyData <- R10PE %>% mutate(PE_adjusted_cells = CellsPerWell / Estimate)
head(TidyData)
write.csv(TidyData, file = "TidyData.csv")
dim(TidyData)
TidyData <- TidyData %>% filter(!LineNum_legacy == 11) %>% filter(!LineNum_legacy == 12)
dim(TidyData)
Trial <- TidyData %>% filter(LineNum_legacy == "22")
Trialout <- elda(Trial$WellsGrown, Trial$PE_adjusted_cells, Trial$TrueWellsPlated, Trial$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(Trialout)
Trialout
#See if I can't clean up this code
Trialout2 <- elda(response = Trial$WellsGrown, dose = Trial$PE_adjusted_cells, tested = Trial$TrueWellsPlated, group = Trial$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(Trialout2)
```
Massive ELDA
```{r}
MassELDA <- elda(response = TidyData$WellsGrown, dose = TidyData$PE_adjusted_cells, tested = TidyData$TrueWellsPlated, group = TidyData$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(MassELDA)
ELDACI <- as.data.frame(MassELDA$CI)
head(ELDACI)
ELDACI <- add_rownames(ELDACI, var = "LineID")
ELDACI <- ELDACI %>% mutate(LineID = as.factor(LineID))
write.csv(MassELDA$CI, "ELDAConfIntervals.csv")
TidyELDA <- merge(TidyData, ELDACI, by=1)
head(TidyELDA)
head(TidyData)
MassELDA <- elda(response = TidyData$WellsGrown, dose = TidyData$PE_adjusted_cells, tested = TidyData$TrueWellsPlated, group = TidyData$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(MassELDA)
ELDACI <- as.data.frame(MassELDA$CI)
head(ELDACI)
ELDACI <- add_rownames(ELDACI, var = "LineID")
ELDACI <- ELDACI %>% mutate(LineID = as.factor(LineID))
str(ELDACI)
str(TidyData)
TidyData <- as.factor(TidyData$LineID)
head(ELDACI)
ELDACI <- add_rownames(ELDACI, var = "LineID")
ELDACI <- ELDACI %>% mutate(LineID = as.factor(LineID))
#write.csv(MassELDA$CI, "ELDAConfIntervals.csv")
TidyELDA <- merge(TidyData, ELDACI, by=1)
head(TidyELDA)
TidyData <- R10PE %>% mutate(PE_adjusted_cells = CellsPerWell / Estimate)
head(TidyData)
str(TidyData)
MassELDA <- elda(response = TidyData$WellsGrown, dose = TidyData$PE_adjusted_cells, tested = TidyData$TrueWellsPlated, group = TidyData$LineID, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
plot(MassELDA)
ELDACI <- as.data.frame(MassELDA$CI)
head(ELDACI)
ELDACI <- add_rownames(ELDACI, var = "LineID")
ELDACI <- ELDACI %>% mutate(LineID = as.character(LineID))
#write.csv(MassELDA$CI, "ELDAConfIntervals.csv")
TidyELDA <- merge(TidyData, ELDACI, by=1)
head(TidyELDA)
TidyBin <- TidyData %>% mutate(Gene = paste(Transgene, Mutation, sep = "_"))
head(TidyBin)
BinELDA <- elda(response = TidyBin$WellsGrown, dose = TidyBin$PE_adjusted_cells, tested = TidyBin$TrueWellsPlated, group = TidyBin$Gene, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
BinCI <- as.data.frame(BinELDA$CI) %>% add_rownames(var = "LineID") %>% mutate(LineID = as.factor(LineID))
write.csv(BinCI, "BinnedELDACI.csv")
TidyBin2 <- TidyData %>% mutate(Gene = paste(Transgene, Mutation, LineNum_legacy, sep = "_"))
head(TidyBin2)
Bin2ELDA <- elda(response = TidyBin2$WellsGrown, dose = TidyBin2$PE_adjusted_cells, tested = TidyBin2$TrueWellsPlated, group = TidyBin2$Gene, observed = FALSE, confidence = 0.95, test.unit.slope = TRUE)
Bin2CI <- as.data.frame(Bin2ELDA$CI) %>% add_rownames(var = "LineID") %>% mutate(LineID = as.factor(LineID))
write.csv(Bin2CI, "BinnedELDACI_3bins.csv")
library(knitr)
```{r}
library(dplyr)
library(ggplot2)
library(reshape2)
library(stringr)
RawData <- read.csv("PlateSortResults.csv")
summary(RawData)
```
We should start by getting an idea for Plating Efficiency (PE) from the WEHI wells
```{r}
WEHIonly <- RawData %>% filter(Media == "WEHI")
plot(PE2d$Estimate, PE9d$Estimate, xlab = "PE 2 Days post infection", ylab = "PE 9 Days post infection", xlim = c(0.8,3.5), ylim = c(0.8,3.5))
abline(a = 0, b = 1, col = "darkblue")
