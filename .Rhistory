remove.packages("evaluate", lib="~R/win-library/3.2")
remove.packages("evaluate")
install.packages("evaluate")
library("evaluate")
install.packages("stringi")
library("stringi")
library("evaluate")
library("updateR")
install.packages("updateR")
library("updateR")
---
This is an attempt at analyzing the limiting dilution plating experiments in my
ongoing Acquired Mutations project. No analysis has been performed to this point.
```{r}
library(dplyr)
library(ggplot2)
RawData <- read.csv("PlateSortResults.csv")
summary(RawData)
head(RawData)
```
We should start by getting an idea for Plating Efficiency (PE) from the WEHI wells
```{r}
WEHIonly <- RawData %>% filter(Media == "WEHI")
summary(WEHIonly)
WEHIcomplete <- WEHIonly %>% filter(!is.na(WellsGrown))
summary(WEHIcomplete)
Wpercents <- WEHIcomplete %>% transform(GrowthPercent = WellsGrown / WellsPlated)
summary(Wpercents)
hist(Wpercents$GrowthPercent)
```
Which conditions gave the low end of the growth percent?
```{r}
Wlowgrowth <- Wpercents %>% filter(GrowthPercent < 0.4)
Wlowgrowth[1,c(1,5,6,9,10)]
```
Comparing PE of cells plated at 2 days and 9 days post-infection
```{r}
Wpercents2 <- Wpercents %>% filter(DaysPostInfection == 2)
Wpercents9 <- Wpercents %>% filter(DaysPostInfection == 9)
summary(Wpercents2)
summary(Wpercents9)
hist(Wpercents2$GrowthPercent, xlim = c(0.2,1), xlab = "Percent Growth 2 days post-infection", breaks = 8, main = "WEHI 2 days post infection")
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent), add = TRUE, col = "darkblue", lwd = 2))
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2))
curve(dnorm(x, mean = mean(Wpercents2$GrowthPercent), sd = sd(Wpercents2$GrowthPercent)), add = TRUE, col = "darkblue", lwd = 2)
```{r}
hist((RawData %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown))))
```{r}
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / Wells Plated)
```{r}
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent)
AllPercents <- RawData %>% mutate(GrowthPercent = WellsGrown / WellsPlated)
hist((AllPercents %>% filter(Media == "R10", CellsPerWell == 1, !is.na(WellsGrown)))$GrowthPercent, main = "All growth percentages in R10, 1 cell per well")
```
?scatter()
?plot()
plot(Wpercents2$GrowthPercent, Wpercents9$GrowthPercent)
hinge(Wpercents2, Wpercents9)
merge(Wpercents2, Wpercents9)
rbind(Wpercents2, Wpercents9)
cbind(Wpercents2, Wpercents9)
meltRaw <- melt(RawData, id=c("Transgene", "Mutation", "LineNum_legacy"))
install.packages(reshape)
"reshape2"
install.packages("reshape2")
library(reshape2)
meltRaw <- melt(RawData, id=c("Transgene", "Mutation", "LineNum_legacy"))
View(meltRaw)
View(meltRaw)
castRaw <- cast(meltRaw, LineNum_legacy~variable, mean)
castRaw <- dcast(meltRaw, LineNum_legacy~variable, mean)
View(castRaw)
meltRaw <- melt(RawData, id=c("LineID"))
View(meltRaw)
3. We need to adjust GrowthPercent for Plating Effiency
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(CompleteData, -WellsPlated, -WellsCensored)
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(-WellsPlated, -WellsCensored)
head(CompleteData)
CompletePercent <- CompleteData %>% mutate(GrowthPercent = WellsGrown / TrueWellsPlated) %>% select(-WellsGrown, -TrueWellsPlated, -LineNum_legacy, -Transgene, -Mutation)
head(CompletePercent)
```
View(meltRaw)
View(CompletePercent)
meltComplete <- melt(CompletePercent, id.vars = "LineID")
View(meltComplete)
lapply()
FUN()
```{r}
CompleteData <- RawData %>% filter(!is.na(WellsPlated))
CompleteData <- CompleteData %>% mutate(TrueWellsPlated = WellsPlated - WellsCensored)
CompleteData <- CompleteData %>% select(-WellsPlated, -WellsCensored)
head(CompleteData)
CompletePercent <- CompleteData %>% mutate(GrowthPercent = WellsGrown / TrueWellsPlated) %>% select(-WellsGrown, -TrueWellsPlated, -LineNum_legacy, -Transgene, -Mutation)
head(CompletePercent)
```
Trying to reshape data to allow for better analysis
```{r}
CompleteConcat <- CompletePercent %>% mutate(Day_Media_Cells = paste(DaysPostInfection, Media, CellsPerWell, sep = "_")) %>% select(-PlateSeries, -DaysPostInfection, -CellsPerWell, -Media)
head(CompleteConcat)
CompleteTidy <- recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
View(CompleteConcat)
View(CompleteConcat)
str(Completetid )
str(CompleteConcat)
Fact <- CompleteConcat %>% mutate(Day_Media_Cells = as.factor(Day_Media_Cells))
str(Fact)
```{r}
CompleteConcat <- CompletePercent %>% mutate(Day_Media_Cells = paste(DaysPostInfection, Media, CellsPerWell, sep = "_")) %>% select(-PlateSeries, -DaysPostInfection, -CellsPerWell, -Media)
CompleteConcat <- CompleteConcat %>% mutate(Day_Media_Cells = as.factor(Day_Media_Cells))
head(CompleteConcat)
CompleteTidy <- recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
head(CompleteTidy)
2. We need to calculate GrowthPercent for all observations
str(CompleteConcat)
is.na(CompleteConcat)
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID",
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = "LineID", "Day_Media_Cells")
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = 1,3)
recast(CompleteConcat, LineID ~ Day_Media_Cells, id.var = 1,3)
recast(CompleteConcat, LineID ~ 3, id.var = 1,3)
